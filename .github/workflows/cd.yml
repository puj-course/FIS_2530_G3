name: CD â€“ Deployment a GitHub Environment
on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  deployments: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run build

      - name: Subir artefacto dist
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist/**
            !**/*.map

      - name: Crear deployment
        id: create_deploy
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const res = await github.rest.repos.createDeployment({
              owner, repo,
              ref: context.sha,
              environment: 'production',
              description: 'Build listo. Artefacto adjunto en este run.',
              auto_merge: false,
              required_contexts: [],
              transient_environment: false,
              production_environment: true
            });
            core.setOutput('id', res.data.id);

      - name: Marcar deployment como successful
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            await github.rest.repos.createDeploymentStatus({
              owner, repo,
              deployment_id: '${{ steps.create_deploy.outputs.id }}',
              state: 'success',
              environment_url: `https://github.com/${owner}/${repo}/actions/runs/${process.env.GITHUB_RUN_ID}`,
              log_url: `https://github.com/${owner}/${repo}/actions/runs/${process.env.GITHUB_RUN_ID}`,
              description: 'Deployment registrado (ver artefacto dist).'
            });
